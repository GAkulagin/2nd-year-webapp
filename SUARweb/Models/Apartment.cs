//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SUARweb.Models
{ 

    using System.Collections.Generic;
    using System.ComponentModel;
    using SUARweb.Exporters;

    public partial class Apartment : IExportableEntity
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Apartment()
        {
            this.Agreements = new HashSet<Agreement>();
        }

        public int ID { get; set; }
        [DisplayName("Статус квартиры")]
        public int StatusId { get; set; }
        [DisplayName("Номер")]
        public int Number { get; set; }
        [DisplayName("Число комнат")]
        public int RoomCount { get; set; }
        [DisplayName("Общая площадь")]
        public decimal TotalArea { get; set; }
        [DisplayName("Жилая площадь")]
        public decimal LivingArea { get; set; }
        [DisplayName("Балкон")]
        public int BalconyTypeId { get; set; }
        [DisplayName("Холодильник")]
        public bool Fridge { get; set; }
        [DisplayName("Кухонная плита")]
        public bool Stove { get; set; }
        [DisplayName("Стиральная машина")]
        public bool WashMachine { get; set; }
        [DisplayName("Кондиционер")]
        public bool AirConditioner { get; set; }
        [DisplayName("Интернет")]
        public int InternetConnTypeId { get; set; }
        [DisplayName("телевидение")]
        public int TvTypeId { get; set; }
        [DisplayName("Можно с питомцами")]
        public bool WithPets { get; set; }
        [DisplayName("Можно с детьми")]
        public bool WithChildren { get; set; }
        [DisplayName("Можно для мероприятий")]
        public bool ForEvents { get; set; }
        [DisplayName("Здание")]
        public int BuildingId { get; set; }
        [DisplayName("Арендодатель")]
        public string LessorId { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Agreement> Agreements { get; set; }
        public virtual Balcony_Type Balcony_Type { get; set; }
        public virtual Building Building { get; set; }
        public virtual Client Client { get; set; }
        public virtual Internet_Conn Internet_Conn { get; set; }
        public virtual Rental_Status Rental_Status { get; set; }
        public virtual Television Television { get; set; }


        public string GetAdress()
        {
            return Building.District.Settlement.Subject.Name + ", " +
                       Building.District.Settlement.Settlement_Type.Type + " " +
                       Building.District.Settlement.Name + ", " +
                       Building.Street + ", д. " +
                       Building.Number + ", кв. " +
                       Number;
        }

        public Dictionary<string, dynamic> GetExportData()
        {
            return new Dictionary<string, dynamic>()
            {
                { "Адрес здания", Building.GetAdress() },
                { "Номер квартиры", Number },
                { "Арендодатель", Client.GetPassportAndFullname() },
                { "Арендный статус", Rental_Status.Status },
                { "Число комнат", RoomCount },
                { "Общая площадь", TotalArea },
                { "Жилая площадь", LivingArea },
                { "Холодильник", Fridge },
                { "Кухонная плита", Stove },
                { "Стиральная машина", WashMachine },
                { "Кондиционер", AirConditioner },
                { "С детьми", WithChildren },
                { "С питомцами", WithPets },
                { "Для мероприятий", ForEvents },
                { "Балкон", Balcony_Type.BalconyType },
                { "Интернет", Internet_Conn.ConnectionType },
                { "Телевидение", Television.TVtype },
            };
        }
    }
}
